#!/bin/bash
2>/dev/null . /usr/share/wb-hwconf-manager/functions.sh || . ./functions.sh

config_apply_changes() {
	local old_state=`mktemp`
	local state=`mktemp`
	cp "$CONFIG_STATE" "$old_state" 2>/dev/null

	local CONFIG=${1:-${CONFIG}}
	while :; do
		cp "$old_state" "$state"

		local delta="$(
			diff -uN "$old_state" <(config_parse | sort) |
			sed -rn 's/^([\+-])([^+-]\S+) /\1 \2 /p'
		)"
		[[ -z "$delta" ]] && break

		local m_add=()
		local m_del=()
		while read ACTION SLOT MODULE; do
			[[ -n "$SLOT" ]] || {
				log "Bad config diff"
				continue
			}
			case "$ACTION" in
				+)
					m_add+=("$SLOT $MODULE")
					;;
				-)
					m_del+=("$SLOT $MODULE")
					;;
			esac
		done <<< "$delta"

		for pair in "${m_del[@]}"; do
			read SLOT MODULE <<<"$pair"
			[[ -n "$MODULE" ]] && {
				log "Deleting $SLOT:$MODULE"
				module_run_hook del || break 2
			}
			sed -ri "/^$SLOT(\s+$MODULE|\s*)$/d" "$state"
		done

		for pair in "${m_add[@]}"; do
			read SLOT MODULE <<<"$pair"
			[[ -n "$MODULE" ]] && {
				log "Adding $SLOT:$MODULE"
				module_run_hook add || break 2
			}
			echo "$SLOT $MODULE" >> "$state"
		done

		sort "$state" > "$old_state"
	done
		
	rm "$old_state"
	sort "$state" > "$CONFIG_STATE"
	rm "$state"
}

case "$1" in
	"confed-tojson")
		# Build json description of all modules in form
		# {
		# 	"id": "mod-foo",
		# 	"description": "Foo Module",
		# 	"compatible_slots": ["bar", "baz"]
		# }
		# and put it to "modules" array in the config (which is read from stdin)
		perl -e '
			while (<STDIN>) {
				print;
			}
			local $/ = undef;
			foreach $f (@ARGV) {
				$f =~ /\/([^\/.]+)\.dtso$/ and $vals{id} = "\"$1\"";
				open F, $f or die;
				binmode F;
				$file = <F>;
				close F;
				$file =~ /compatible-slots\s*=\s*(.*?);/s and
					$vals{compatible_slots} = "[$1]";
				$file =~ /description\s*=\s*(.*?);/s and
					$vals{description} = $1;

				print "{", join(",", map "\"$_\": $vals{$_}", keys %vals), "}\n";
			};
		' $MODULES/*.dtso | jq --slurp '.[0].modules = .[1:] | .[0]'
		;;
	"confed-fromjson")
		SYSLOG="yes"
		tmp=`mktemp`
		# Remove "modules" array
		jq 'del(.modules)' > "$tmp"
		config_apply_changes "$tmp"
		cat "$tmp"
		rm "$tmp"
		;;
	"bind")
		module_bind $2 $3
		;;
	"unbind")
		module_unbind $2
		;;
	"config-apply")
		config_apply_changes
		;;
	*)
		>&2 cat <<EOF
Usage: $0 <command>

Commands:
  confed-tojson          Prepare config passed to stdin for the web editor
  confed-fromjson        Prepare edited config for saving
  bind <slot> <module>   Bind module to slot
  unbind <slot>          Unbinds any module from slot
  config-apply           Run modules add/remove hooks when config is changed
EOF
		;;
esac
